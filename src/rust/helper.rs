// return sinc(x) = sin(x)/x, given both x and sin(x)
// [since we only use this in cases where sin(x) has already been computed]
#[inline]
pub(crate) fn sinc(x: f64, sinx: f64) -> f64 {
    if x.abs() < 1e-4 {
        1.0 - 0.166_666_666_666_666_66 * x * x
    } else {
        sinx / x
    }
}

// sinh(x) via Taylor series, accurate to machine precision for |x| < 1e-2
#[inline]
pub(crate) fn sinh_taylor(x: f64) -> f64 {
    x * (1.0 + (x * x) * (0.166_666_666_666_666_66 + 0.008_333_333_333_333_333 * (x * x)))
}

// precomputed table of expa2n2[n-1] = exp(-a2*n*n)
// for double-precision a2 = 0.26865... in FADDEEVA(w), below.
pub(crate) const EXPA2N2: [f64; 52] = [
    7.644_052_816_712_216e-1,
    3.414_245_271_665_484e-1,
    8.910_726_469_294_125e-2,
    1.358_872_990_554_600_9e-2,
    1.210_854_552_534_374_7e-3,
    6.304_526_139_334_493e-5,
    1.918_051_565_771_146_7e-6,
    3.409_694_477_148_324e-8,
    3.541_750_890_994_694e-10,
    2.149_650_795_832_607e-12,
    7.623_689_118_337_244e-15,
    1.579_827_971_106_811e-17,
    1.912_941_891_035_826_7e-20,
    1.353_446_567_642_053_5e-23,
    5.595_357_124_285_887e-27,
    1.351_642_579_724_017_7e-30,
    1.907_845_828_435_011_7e-34,
    1.573_519_202_914_429_4e-38,
    7.583_124_323_280_329e-43,
    2.135_362_754_386_970_8e-47,
    3.513_520_637_871_958e-52,
    3.378_008_302_663_969e-57,
    1.897_694_394_683_01e-62,
    6.229_299_260_726_688e-68,
    1.194_811_720_069_387_1e-73,
    1.339_081_811_330_059_6e-79,
    8.769_243_034_832_239e-86,
    3.355_555_761_662_55e-92,
    7.502_641_106_881_73e-99,
    9.801_922_007_454_103e-106,
    7.482_654_128_222_689e-113,
    3.337_701_225_668_094e-120,
    8.699_345_981_598_611e-128,
    1.324_869_514_840_888_5e-135,
    1.178_981_442_013_152_5e-143,
    6.130_391_202_361_8e-152,
    1.862_587_859_508_221e-160,
    3.306_684_082_014_327_6e-169,
    3.430_172_808_879_462_5e-178,
    2.079_153_977_758_082_2e-187,
    7.363_845_453_239_85e-197,
    1.523_947_603_940_857_4e-206,
    1.842_819_350_465_321e-216,
    1.302_095_538_029_929_3e-226,
    5.375_889_035_210_805e-237,
    1.296_895_845_997_631_5e-247,
    1.828_130_780_228_665_7e-258,
    1.505_763_553_486_842_3e-269,
    7.246_923_207_992_942e-281,
    2.037_970_513_147_268e-292,
    3.348_802_159_278_738_2e-304,
    0.0, // underflow (also prevents reads past array end, below)
];
